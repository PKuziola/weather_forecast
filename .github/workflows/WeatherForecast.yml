name: CI Workflow

on:
  push:
    branches:
      - main

jobs:
  pre-commit-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Print current directory
      run: pwd

    - name: Set up Python 3.11
      uses: actions/setup-python@v2
      with:
        python-version: 3.11
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Check Git version
      run: git --version
      
    - name: Cache pre-commit hooks
      uses: actions/cache@v2
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-precommit-${{ hashFiles('.pre-commit-config.yaml') }}

    - name: Install pre-commit
      run: pip install pre-commit

    - name: Run pre-commit with debug
      run: pre-commit run --all-files

  create-pubsub-topic_new:
    runs-on: ubuntu-latest
    steps:
    
      - uses: actions/checkout@v3
  
      - name: Setup GCP Service Account
        uses: google-github-actions/setup-gcloud@main
        with:
          project_id: "cicdtest-421422"
          service_account_key: ${{ secrets.GCP_ACCOUNT_KEY }}

      - name: Authenticate GCP Account
        uses: 'google-github-actions/auth@v2'
        with:
           credentials_json: ${{ secrets.GCP_ACCOUNT_KEY }}          

      - name: Check and Create Pub/Sub topic
        run: |
          if ! gcloud pubsub topics describe weather-topic > /dev/null 2>&1; then
            gcloud pubsub topics create weather-topic
            echo "Topic 'weather-topic' created."
          else
            echo "Topic 'weather-topic' already exists."
          fi
        shell: bash
        env:
          CLOUDSDK_METRICS_ENVIRONMENT: github-actions-setup-gcloud
          CLOUDSDK_METRICS_ENVIRONMENT_VERSION: 2.1.0
      
  deploy-gloud-functions_new:
    runs-on: ubuntu-latest
    steps:
    
      - uses: actions/checkout@v3
  
      - name: Setup GCP Service Account
        uses: google-github-actions/setup-gcloud@main
        with:
          project_id: "cicdtest-421422"
          service_account_key: ${{ secrets.GCP_ACCOUNT_KEY }}

      - name: Authenticate GCP Account
        uses: 'google-github-actions/auth@v2'
        with:
           credentials_json: ${{ secrets.GCP_ACCOUNT_KEY }}
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Enable Cloud Run API
        run: |
          gcloud services enable run.googleapis.com

      #- name: Delete existing Cloud Function
      #  run: |
      #    gcloud functions delete generate_weather_summary --region=europe-west1 --quiet || echo "Function does not exist or failed to delete"
      #  shell: bash
    
      #- name: deploy cloud function
      #  id: deploy
      #  uses: google-github-actions/deploy-cloud-functions@main
      #  with:
      #    name: generate_weather_summary
      #    runtime: python310
      #    project_id: "cicdtest-421422"
      #    entry_point: generate_weather_summary
      #    region: europe-west1
      #    source_dir: .
      #    event_trigger_pubsub_topic: weather-topic
      #    memory: 512
      #    environment: GEN_1
      #    environment_variables: "API_KEY=${{ secrets.API_KEY }},SLACK_TOKEN=${{ secrets.SLACK_TOKEN }}"
      
      - name: Deploy Google Cloud Functions
        run: |
          gcloud functions deploy generate_weather_summary \
            --runtime=python310 \
            --entry-point=generate_weather_summary \
            --region=europe-west1 \
            --source=. \
            --trigger-topic weather-topic \
            --memory=512MB \
            --set-env-vars "API_KEY=${{ secrets.API_KEY }},SLACK_TOKEN=${{ secrets.SLACK_TOKEN }}" 
    
  create-scheduler-job:
    runs-on: ubuntu-latest
    container:
      image: google/cloud-sdk
    steps:

      - uses: actions/checkout@v3
  
      - name: Setup GCP Service Account
        uses: google-github-actions/setup-gcloud@main
        with:
          project_id: "cicdtest-421422"
          service_account_key: ${{ secrets.GCP_ACCOUNT_KEY }}

      - name: Authenticate GCP Account
        uses: 'google-github-actions/auth@v2'
        with:
           credentials_json: ${{ secrets.GCP_ACCOUNT_KEY }}   

      - name: Create Scheduler Job
        run: |
          gcloud scheduler jobs update pubsub weather-summary-job \
            --schedule="0 20 * * *" \
            --time-zone="CET" \
            --topic=weather-topic \
            --message-body="{}" \
            --location=europe-west1
