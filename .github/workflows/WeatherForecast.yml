name: CI Workflow

on:
  push:
    branches:
      - main

jobs:
  pre-commit-test:
    runs-on: ubuntu-latest
    container:
      image: python:3.11
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Change directory to repository root
      run: cd $GITHUB_WORKSPACE

    - name: Set up Python 3.11
      uses: actions/setup-python@v2
      with:
        python-version: 3.11
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Cache pre-commit hooks
      uses: actions/cache@v2
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-precommit-${{ hashFiles('.pre-commit-config.yaml') }}
    - name: Install pre-commit
      run: pip install pre-commit
    - name: Run pre-commit
      run: pre-commit run --all-files

  create-pubsub-topic_new:
    runs-on: ubuntu-latest
    steps:
    
      - uses: actions/checkout@v3
  
      - name: Setup GCP Service Account
        uses: google-github-actions/setup-gcloud@main
        with:
          project_id: "cicdtest-421422"
          service_account_key: ${{ secrets.GCP_ACCOUNT_KEY }}

      - name: Check and Create Pub/Sub topic
        run: |
          if ! gcloud pubsub topics describe weather-topic > /dev/null 2>&1; then
            gcloud pubsub topics create weather-topic
            echo "Topic 'weather-topic' created."
          else
            echo "Topic 'weather-topic' already exists."
        shell: bash
        env:
          CLOUDSDK_METRICS_ENVIRONMENT: github-actions-setup-gcloud
          CLOUDSDK_METRICS_ENVIRONMENT_VERSION: 2.1.0
      
  deploy-gloud-functions_new:
    runs-on: ubuntu-latest
    steps:
    
      - uses: actions/checkout@v3
  
      - name: Setup GCP Service Account
        uses: google-github-actions/setup-gcloud@main
        with:
          project_id: "cicdtest-421422"
          service_account_key: ${{ secrets.GCP_ACCOUNT_KEY }}
          
      - name: Authenticate with Google Cloud
        run: |
          echo "${{ secrets.GCP_ACCOUNT_KEY }}" > /tmp/key.json
          gcloud auth activate-service-account --key-file=/tmp/key.json
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: pip install -r requirements.txt
    
      - name: deploy cloud function
        id: deploy
        uses: google-github-actions/deploy-cloud-functions@main
        with:
          name: generate_weather_summary
          runtime: python310
          project_id: "cicdtest-421422"
          entry_point: generate_weather_summary
          region: europe-west1
          source_dir: .
          event_trigger_type: topic weather-topic
          memory: 512MB
          environment_variables: "API_KEY=${{ secrets.API_KEY }},SLACK_TOKEN=${{ secrets.SLACK_TOKEN }}"
  
  
  create-scheduler-job:
    runs-on: ubuntu-latest
    container:
      image: google/cloud-sdk
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Google Cloud SDK
        run: echo ${{ secrets.GCP_ACCOUNT_KEY }} > gcloud-service-key.json
      - name: Authenticate to Google Cloud
        run: gcloud auth activate-service-account --key-file gcloud-service-key.json
      - name: Remove service key
        run: rm gcloud-service-key.json
      - name: Set Google Cloud project
        run: gcloud config set project cicdtest-421422
      - name: Create Scheduler Job
        run: |
          if ! gcloud scheduler jobs describe weather-summary-job --location=europe-west1 &> /dev/null; then
            gcloud scheduler jobs create pubsub weather-summary-job \
              --schedule="0 20 * * *" \
              --time-zone="CET" \
              --topic=weather-topic \
              --message-body="{}" \
              --location=europe-west1
          fi
